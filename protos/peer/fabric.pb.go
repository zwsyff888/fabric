// Code generated by protoc-gen-go.
// source: peer/fabric.proto
// DO NOT EDIT!

package peer

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type PeerEndpoint_Type int32

const (
	PeerEndpoint_UNDEFINED     PeerEndpoint_Type = 0
	PeerEndpoint_VALIDATOR     PeerEndpoint_Type = 1
	PeerEndpoint_NON_VALIDATOR PeerEndpoint_Type = 2
)

var PeerEndpoint_Type_name = map[int32]string{
	0: "UNDEFINED",
	1: "VALIDATOR",
	2: "NON_VALIDATOR",
}
var PeerEndpoint_Type_value = map[string]int32{
	"UNDEFINED":     0,
	"VALIDATOR":     1,
	"NON_VALIDATOR": 2,
}

func (x PeerEndpoint_Type) String() string {
	return proto.EnumName(PeerEndpoint_Type_name, int32(x))
}
func (PeerEndpoint_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor9, []int{2, 0} }

type PeerAddress struct {
	Host string `protobuf:"bytes,1,opt,name=host" json:"host,omitempty"`
	Port int32  `protobuf:"varint,2,opt,name=port" json:"port,omitempty"`
}

func (m *PeerAddress) Reset()                    { *m = PeerAddress{} }
func (m *PeerAddress) String() string            { return proto.CompactTextString(m) }
func (*PeerAddress) ProtoMessage()               {}
func (*PeerAddress) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{0} }

type PeerID struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *PeerID) Reset()                    { *m = PeerID{} }
func (m *PeerID) String() string            { return proto.CompactTextString(m) }
func (*PeerID) ProtoMessage()               {}
func (*PeerID) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{1} }

type PeerEndpoint struct {
	ID      *PeerID           `protobuf:"bytes,1,opt,name=ID" json:"ID,omitempty"`
	Address string            `protobuf:"bytes,2,opt,name=address" json:"address,omitempty"`
	Type    PeerEndpoint_Type `protobuf:"varint,3,opt,name=type,enum=protos.PeerEndpoint_Type" json:"type,omitempty"`
	PkiID   []byte            `protobuf:"bytes,4,opt,name=pkiID,proto3" json:"pkiID,omitempty"`
}

func (m *PeerEndpoint) Reset()                    { *m = PeerEndpoint{} }
func (m *PeerEndpoint) String() string            { return proto.CompactTextString(m) }
func (*PeerEndpoint) ProtoMessage()               {}
func (*PeerEndpoint) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{2} }

func (m *PeerEndpoint) GetID() *PeerID {
	if m != nil {
		return m.ID
	}
	return nil
}

type PeersMessage struct {
	Peers []*PeerEndpoint `protobuf:"bytes,1,rep,name=peers" json:"peers,omitempty"`
}

func (m *PeersMessage) Reset()                    { *m = PeersMessage{} }
func (m *PeersMessage) String() string            { return proto.CompactTextString(m) }
func (*PeersMessage) ProtoMessage()               {}
func (*PeersMessage) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{3} }

func (m *PeersMessage) GetPeers() []*PeerEndpoint {
	if m != nil {
		return m.Peers
	}
	return nil
}

type PeersAddresses struct {
	Addresses []string `protobuf:"bytes,1,rep,name=addresses" json:"addresses,omitempty"`
}

func (m *PeersAddresses) Reset()                    { *m = PeersAddresses{} }
func (m *PeersAddresses) String() string            { return proto.CompactTextString(m) }
func (*PeersAddresses) ProtoMessage()               {}
func (*PeersAddresses) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{4} }

// Contains information about the blockchain ledger such as height, current
// block hash, and previous block hash.
type BlockchainInfo struct {
	Height            uint64 `protobuf:"varint,1,opt,name=height" json:"height,omitempty"`
	CurrentBlockHash  []byte `protobuf:"bytes,2,opt,name=currentBlockHash,proto3" json:"currentBlockHash,omitempty"`
	PreviousBlockHash []byte `protobuf:"bytes,3,opt,name=previousBlockHash,proto3" json:"previousBlockHash,omitempty"`
}

func (m *BlockchainInfo) Reset()                    { *m = BlockchainInfo{} }
func (m *BlockchainInfo) String() string            { return proto.CompactTextString(m) }
func (*BlockchainInfo) ProtoMessage()               {}
func (*BlockchainInfo) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{5} }

func init() {
	proto.RegisterType((*PeerAddress)(nil), "protos.PeerAddress")
	proto.RegisterType((*PeerID)(nil), "protos.PeerID")
	proto.RegisterType((*PeerEndpoint)(nil), "protos.PeerEndpoint")
	proto.RegisterType((*PeersMessage)(nil), "protos.PeersMessage")
	proto.RegisterType((*PeersAddresses)(nil), "protos.PeersAddresses")
	proto.RegisterType((*BlockchainInfo)(nil), "protos.BlockchainInfo")
	proto.RegisterEnum("protos.PeerEndpoint_Type", PeerEndpoint_Type_name, PeerEndpoint_Type_value)
}

func init() { proto.RegisterFile("peer/fabric.proto", fileDescriptor9) }

var fileDescriptor9 = []byte{
	// 391 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x6c, 0x52, 0x5d, 0x6b, 0xe2, 0x40,
	0x14, 0xdd, 0x68, 0x74, 0xc9, 0x55, 0x83, 0x0e, 0xb2, 0x64, 0x41, 0x96, 0x25, 0x4f, 0xfb, 0x99,
	0x80, 0xcb, 0xb2, 0xb0, 0x6f, 0x4a, 0x5c, 0x36, 0xd0, 0xc6, 0x32, 0xd8, 0x3e, 0xf4, 0xa5, 0xc4,
	0x64, 0x4c, 0x82, 0x9a, 0x09, 0x33, 0xb1, 0xd0, 0xd7, 0xfe, 0xb8, 0xfe, 0xae, 0xce, 0x87, 0xa9,
	0x05, 0xfb, 0x34, 0xf7, 0x9c, 0x7b, 0xee, 0x9d, 0x7b, 0xee, 0x0c, 0x8c, 0x2a, 0x42, 0x98, 0xbf,
	0x89, 0xd7, 0xac, 0x48, 0xbc, 0x8a, 0xd1, 0x9a, 0xa2, 0xae, 0x3a, 0xb8, 0xfb, 0x1b, 0x7a, 0x57,
	0x22, 0x39, 0x4b, 0x53, 0x46, 0x38, 0x47, 0x08, 0xcc, 0x9c, 0xf2, 0xda, 0x31, 0x3e, 0x1b, 0x5f,
	0x2c, 0xac, 0x62, 0xc9, 0x55, 0x94, 0xd5, 0x4e, 0x4b, 0x70, 0x1d, 0xac, 0x62, 0x77, 0x02, 0x5d,
	0x59, 0x16, 0x06, 0x32, 0x5b, 0xc6, 0x7b, 0xd2, 0x54, 0xc8, 0xd8, 0x7d, 0x32, 0xa0, 0x2f, 0xd3,
	0x8b, 0x32, 0xad, 0x68, 0x51, 0xd6, 0xe8, 0x13, 0xb4, 0xc2, 0x40, 0x49, 0x7a, 0x53, 0x5b, 0x4f,
	0xc0, 0x3d, 0xdd, 0x00, 0x8b, 0x0c, 0x72, 0xe0, 0x7d, 0xac, 0x27, 0x50, 0xb7, 0x58, 0xb8, 0x81,
	0xe8, 0x27, 0x98, 0xf5, 0x43, 0x45, 0x9c, 0xb6, 0xa0, 0xed, 0xe9, 0xc7, 0xd7, 0xb5, 0x4d, 0x77,
	0x6f, 0x25, 0x04, 0x58, 0xc9, 0xd0, 0x18, 0x3a, 0xd5, 0xb6, 0x10, 0x77, 0x99, 0x42, 0xdf, 0xc7,
	0x1a, 0xb8, 0x7f, 0xc0, 0x94, 0x1a, 0x34, 0x00, 0xeb, 0x3a, 0x0a, 0x16, 0xff, 0xc2, 0x68, 0x11,
	0x0c, 0xdf, 0x49, 0x78, 0x33, 0xbb, 0x08, 0x83, 0xd9, 0x6a, 0x89, 0x87, 0x06, 0x1a, 0xc1, 0x20,
	0x5a, 0x46, 0x77, 0x27, 0xaa, 0xe5, 0xfe, 0xd5, 0x3e, 0xf8, 0xa5, 0x18, 0x25, 0xce, 0x08, 0xfa,
	0x26, 0xda, 0x4b, 0x2c, 0xac, 0xb4, 0x85, 0x95, 0xf1, 0x5b, 0xe3, 0x60, 0x2d, 0x71, 0x3d, 0xb0,
	0x55, 0xed, 0x71, 0xb5, 0x84, 0xa3, 0x09, 0x58, 0x71, 0x03, 0x54, 0x07, 0x0b, 0x9f, 0x08, 0xf7,
	0xd1, 0x00, 0x7b, 0xbe, 0xa3, 0xc9, 0x36, 0xc9, 0xe3, 0xa2, 0x0c, 0xcb, 0x0d, 0x45, 0x1f, 0xa0,
	0x9b, 0x93, 0x22, 0xcb, 0xf5, 0x7b, 0x98, 0xf8, 0x88, 0xc4, 0x18, 0xc3, 0xe4, 0xc0, 0x18, 0x29,
	0x6b, 0x55, 0xf0, 0x3f, 0xe6, 0xb9, 0xda, 0x5b, 0x1f, 0x9f, 0xf1, 0xe8, 0x87, 0x78, 0x7d, 0x46,
	0xee, 0x0b, 0x7a, 0xe0, 0x27, 0x71, 0x5b, 0x89, 0xcf, 0x13, 0xf3, 0xef, 0xb7, 0x5f, 0xb3, 0xa2,
	0xce, 0x0f, 0x6b, 0x2f, 0xa1, 0x7b, 0x3f, 0x17, 0x4b, 0x63, 0x3b, 0x92, 0x66, 0x2f, 0xbf, 0xc7,
	0xd7, 0x86, 0x7d, 0x69, 0x71, 0xad, 0xff, 0xd0, 0xaf, 0xe7, 0x00, 0x00, 0x00, 0xff, 0xff, 0xa8,
	0x30, 0x01, 0x3f, 0x5f, 0x02, 0x00, 0x00,
}
